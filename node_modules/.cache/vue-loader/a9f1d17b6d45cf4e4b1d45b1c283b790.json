{"remainingRequest":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\src\\module-manage\\components\\permissionsApi-add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\src\\module-manage\\components\\permissionsApi-add.vue","mtime":1665624703601},{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662199364782},{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\babel-loader\\lib\\index.js","mtime":1661002960898},{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662199364782},{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\vue-loader\\lib\\index.js","mtime":1662199385560}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBkZXRhaWwsIHVwZGF0ZSwgYWRkIH0gZnJvbSAnQC9hcGkvYmFzZS9wZXJtaXNzaW9ucycNCmltcG9ydCB7IGxpc3QgfSBmcm9tICdAL2FwaS9iYXNlL21lbnVzLmpzJw0KbGV0IF90aGlzID0gW10NCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ1Blcm1pc3Npb25Hcm91cHNBcGlBZGQnLA0KICBwcm9wczogWydhcGlUaXRsZScsICdydWxlSW5saW5lJ10sDQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBkaWFsb2dGb3JtVmlzaWJsZTogZmFsc2UsDQogICAgICBQZXJtaXNzaW9uR3JvdXBzbWVudTogW10sDQogICAgICBkZWZhdWx0UHJvcHM6IHsNCiAgICAgICAgbGFiZWw6ICd0aXRsZScNCiAgICAgIH0sDQogICAgICBmb3JtQmFzZTogew0KICAgICAgICBpZDogMCwNCiAgICAgICAgdGl0bGU6ICcnLA0KICAgICAgICBhcGlzOiBbXQ0KICAgICAgfSwNCiAgICAgIFBlcm1pc3Npb25BcGlEYXRhOiBbXSwNCiAgICAgIGNoZWNrZWREYXRhOiBbXQ0KICAgIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICAvLyDoj5zljZXmnYPpmZDmoJENCiAgICB0cmVlRGF0YSAoKSB7DQogICAgICBjb25zdCBjaGVja2VkRGF0YSA9IHRoaXMuUGVybWlzc2lvbkFwaURhdGENCg0KICAgICAgY29uc3QgY2hlY2tlZCA9IGZhbHNlDQogICAgICBpZiAoX3RoaXMgIT09IG51bGwgJiYgX3RoaXMuZm9ybUJhc2UuYXBpcy5sZW5ndGggPiAwKSB7DQogICAgICAgIGNvbnN0IHBlciA9IF90aGlzLmZvcm1CYXNlLmFwaXMubWFwKGl0ZW0gPT4gew0KICAgICAgICAgIHJldHVybiBpdGVtDQogICAgICAgIH0pDQogICAgICAgIGNvbnN0IHVzZSA9IHBlci5tYXAoaXRlbSA9PiB7DQogICAgICAgICAgY2hlY2tlZERhdGEuZmlsdGVyKG1pbmkgPT4gew0KICAgICAgICAgICAgaWYgKG1pbmkuaWQgPT09IGl0ZW0pIHsNCiAgICAgICAgICAgICAgbWluaS5jaGVja2VkID0gdHJ1ZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0pDQogICAgICAgIH0pDQogICAgICB9DQogICAgICByZXR1cm4gY2hlY2tlZERhdGENCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvLyDpgLvovpHkuJrliqENCiAgICAvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQogICAgLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KICAgIC8vIOW8ueWxguaYvuekug0KICAgIGRpYWxvZ0Zvcm1WICgpIHsNCiAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlDQogICAgfSwNCiAgICAvLyDlvLnlsYLpmpDol48NCiAgICBkaWFsb2dGb3JtSCAoKSB7DQogICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UNCiAgICB9LA0KICAgIC8vIOmAgOWHug0KICAgIGhhbmRsZUNsb3NlICgpIHsNCiAgICAgIHRoaXMuJGVtaXQoJ2hhbmRsZUNsb3NlTW9kYWwnKQ0KICAgIH0sDQogICAgLy8g6IqC54K55aSN6YCJ5qGG6KKr6YCJ5LitDQogICAgaGFuZGxlQ2hlY2tDaGFuZ2UgKG5vZGVzKSB7DQogICAgICB2YXIgY2hlY2tlZERhdGEgPSBbXQ0KICAgICAgY2hlY2tlZERhdGEucHVzaChub2RlcykNCiAgICB9LA0KICAgIC8vIOmrmOe6p+aOpeWPo+aVsOaNruWIl+ihqA0KICAgIGxvYWRBcGlQZXJtaXNzaW9uRGF0YSAoKSB7DQogICAgICBsaXN0KCkudGhlbigocmV0LCBlcnIpID0+IHsNCiAgICAgICAgaWYgKGVycikgew0KICAgICAgICAgIHJldHVybiBlcnINCiAgICAgICAgfQ0KICAgICAgICBfdGhpcy5QZXJtaXNzaW9uQXBpRGF0YSA9IHJldC5kYXRhDQogICAgICB9KQ0KICAgIH0sDQogICAgLy8g6auY57qn5o6l5Y+j6KGo5Y2V6K+m5oOF5pWw5o2u5Yqg6L29DQogICAgaGFubGRlRWRpdEFwaUZvcm0gKG9iamVkaXRJZCkgew0KICAgICAgLy8g6I635Y+W5p2D6ZmQ5qCH6aKYDQogICAgICB0aGlzLmZvcm1CYXNlLmlkID0gb2JqZWRpdElkDQogICAgICBkZXRhaWxzKHsgaWQ6IG9iamVkaXRJZCB9KS50aGVuKChyZXQsIGVycikgPT4gew0KICAgICAgICBpZiAoZXJyKSB7DQogICAgICAgICAgcmV0dXJuIGVycg0KICAgICAgICB9DQogICAgICAgIHRoaXMuZm9ybUJhc2UuaWQgPSByZXQuZGF0YS5pZA0KICAgICAgICB0aGlzLmZvcm1CYXNlLnRpdGxlID0gcmV0LmRhdGEudGl0bGUNCiAgICAgIH0pDQogICAgICBfdGhpcy5sb2FkQXBpUGVybWlzc2lvbkRhdGEoKQ0KICAgICAgLy8g6K+75Y+W5o6I5p2DDQogICAgICBhcGlyZWFkKHsgaWQ6IG9iamVkaXRJZCB9KS50aGVuKChyZXQsIGVycikgPT4gew0KICAgICAgICBpZiAoZXJyKSB7DQogICAgICAgICAgcmV0dXJuIGVycg0KICAgICAgICB9DQogICAgICAgIHRoaXMuZm9ybUJhc2UuYXBpcyA9IHJldC5kYXRhLmFwaXMNCiAgICAgIH0pDQogICAgfSwNCiAgICAvLyDooajljZXmj5DkuqQNCiAgICBoYW5kbGVTYXZlIChvYmplY3QpIHsNCiAgICAgIGNvbnN0IGN1ckFwaXMgPSBbXQ0KICAgICAgZm9yIChjb25zdCBpdCBvZiBfdGhpcy5jaGVja2VkRGF0YSkgew0KICAgICAgICBjdXJBcGlzLnB1c2goaXQuaWQpDQogICAgICB9DQogICAgICB0aGlzLiRyZWZzW29iamVjdF0udmFsaWRhdGUodmFsaWQgPT4gew0KICAgICAgICBpZiAodmFsaWQpIHsNCiAgICAgICAgICB0aGlzLiRlbWl0KCdoYW5kbGVDbG9zZU1vZGFsJykNCiAgICAgICAgICBhcGlhZGQoeyBpZDogX3RoaXMuZm9ybUJhc2UuaWQsIGFwaXM6IGN1ckFwaXMgfSkudGhlbigocmV0LCBlcnIpID0+IHsNCiAgICAgICAgICAgIGlmIChlcnIpIHsNCiAgICAgICAgICAgICAgcmV0dXJuIGVycg0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy4kZW1pdCgnbmV3RGF0YWVzJywgdGhpcy5mb3JtQmFzZSkNCiAgICAgICAgICB9KQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHRoaXMuJE1lc3NhZ2UuZXJyb3IoJyrlj7fkuLrlv4XloavpobkhJykNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9DQogIH0sDQogIC8vIOaMgui9vee7k+adnw0KICBtb3VudGVkOiBmdW5jdGlvbiAoKSB7fSwNCiAgLy8g5Yib5bu65a6M5q+V54q25oCBDQogIGNyZWF0ZWQgKCkgew0KICAgIF90aGlzID0gdGhpcw0KICB9LA0KICAvLyDnu4Tku7bmm7TmlrANCiAgdXBkYXRlZDogZnVuY3Rpb24gKCkge30NCn0NCg=="},{"version":3,"sources":["permissionsApi-add.vue"],"names":[],"mappingsfile":"permissionsApi-add.vue","sourceRoot":"src/module-manage/components","sourcesContent":["<template>\r\n  <div class=\"add-form\">\r\n    <el-dialog :title=\"apiTitle\" :visible.sync=\"dialogFormVisible\">\r\n    <el-form :rules=\"ruleInline\" ref=\"dataForm\" :model=\"formBase\" label-position=\"left\" label-width=\"120px\" style='width: 400px; margin-left:120px;'>\r\n          <el-form-item :label=\"$t('table.powerTitle')\" prop=\"title\">\r\n            <el-input v-model=\"formBase.title\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item  :label=\"$t('table.powerDistriB')\">\r\n            <el-tree\r\n              ref=\"treeMenu\"\r\n              :data=\"treeData\"\r\n              show-checkbox\r\n              node-key=\"id\"\r\n              :default-expanded-keys=\"[0]\"\r\n              :props=\"defaultProps\" @check-change='handleCheckChange'>\r\n            </el-tree>\r\n          </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"handleClose\">{{$t('table.signOut')}}</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSave('formBase')\">{{$t('table.preserve')}}</el-button>\r\n        </div>\r\n  </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n<script>\r\nimport { detail, update, add } from '@/api/base/permissions'\r\nimport { list } from '@/api/base/menus.js'\r\nlet _this = []\r\nexport default {\r\n  name: 'PermissionGroupsApiAdd',\r\n  props: ['apiTitle', 'ruleInline'],\r\n  data () {\r\n    return {\r\n      dialogFormVisible: false,\r\n      PermissionGroupsmenu: [],\r\n      defaultProps: {\r\n        label: 'title'\r\n      },\r\n      formBase: {\r\n        id: 0,\r\n        title: '',\r\n        apis: []\r\n      },\r\n      PermissionApiData: [],\r\n      checkedData: []\r\n    }\r\n  },\r\n  computed: {\r\n    // 菜单权限树\r\n    treeData () {\r\n      const checkedData = this.PermissionApiData\r\n\r\n      const checked = false\r\n      if (_this !== null && _this.formBase.apis.length > 0) {\r\n        const per = _this.formBase.apis.map(item => {\r\n          return item\r\n        })\r\n        const use = per.map(item => {\r\n          checkedData.filter(mini => {\r\n            if (mini.id === item) {\r\n              mini.checked = true\r\n            }\r\n          })\r\n        })\r\n      }\r\n      return checkedData\r\n    }\r\n  },\r\n  methods: {\r\n    // 逻辑业务\r\n    // **********************************\r\n    // **********************************\r\n    // 弹层显示\r\n    dialogFormV () {\r\n      this.dialogFormVisible = true\r\n    },\r\n    // 弹层隐藏\r\n    dialogFormH () {\r\n      this.dialogFormVisible = false\r\n    },\r\n    // 退出\r\n    handleClose () {\r\n      this.$emit('handleCloseModal')\r\n    },\r\n    // 节点复选框被选中\r\n    handleCheckChange (nodes) {\r\n      var checkedData = []\r\n      checkedData.push(nodes)\r\n    },\r\n    // 高级接口数据列表\r\n    loadApiPermissionData () {\r\n      list().then((ret, err) => {\r\n        if (err) {\r\n          return err\r\n        }\r\n        _this.PermissionApiData = ret.data\r\n      })\r\n    },\r\n    // 高级接口表单详情数据加载\r\n    hanldeEditApiForm (objeditId) {\r\n      // 获取权限标题\r\n      this.formBase.id = objeditId\r\n      details({ id: objeditId }).then((ret, err) => {\r\n        if (err) {\r\n          return err\r\n        }\r\n        this.formBase.id = ret.data.id\r\n        this.formBase.title = ret.data.title\r\n      })\r\n      _this.loadApiPermissionData()\r\n      // 读取授权\r\n      apiread({ id: objeditId }).then((ret, err) => {\r\n        if (err) {\r\n          return err\r\n        }\r\n        this.formBase.apis = ret.data.apis\r\n      })\r\n    },\r\n    // 表单提交\r\n    handleSave (object) {\r\n      const curApis = []\r\n      for (const it of _this.checkedData) {\r\n        curApis.push(it.id)\r\n      }\r\n      this.$refs[object].validate(valid => {\r\n        if (valid) {\r\n          this.$emit('handleCloseModal')\r\n          apiadd({ id: _this.formBase.id, apis: curApis }).then((ret, err) => {\r\n            if (err) {\r\n              return err\r\n            }\r\n            this.$emit('newDataes', this.formBase)\r\n          })\r\n        } else {\r\n          this.$Message.error('*号为必填项!')\r\n        }\r\n      })\r\n    }\r\n  },\r\n  // 挂载结束\r\n  mounted: function () {},\r\n  // 创建完毕状态\r\n  created () {\r\n    _this = this\r\n  },\r\n  // 组件更新\r\n  updated: function () {}\r\n}\r\n</script>\r\n<style>\r\n.el-tree {\r\n  margin-top: 8px;\r\n}\r\n.el-tree-node__content {\r\n  height: auto;\r\n}\r\n.el-form--label-left .el-form-item__label {\r\n  text-align: right;\r\n}\r\n.el-dialog__footer {\r\n  text-align: right;\r\n}\r\n</style>\r\n"]}]}