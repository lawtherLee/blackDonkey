{"remainingRequest":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\src\\module-manage\\components\\permissions-add.vue?vue&type=style&index=0&id=01a4f781&lang=css&","dependencies":[{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\src\\module-manage\\components\\permissions-add.vue","mtime":1665624703601},{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\css-loader\\dist\\cjs.js","mtime":1662199387784},{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662199385560},{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\postcss-loader\\src\\index.js","mtime":1662199384184},{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662199364782},{"path":"C:\\Users\\cswnb\\Desktop\\团队实战2\\黑马mm\\新建文件夹\\blackDonkey\\node_modules\\vue-loader\\lib\\index.js","mtime":1662199385560}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouZWwtdHJlZSB7DQogIG1hcmdpbi10b3A6IDhweDsNCn0NCi5lbC10cmVlLW5vZGVfX2NvbnRlbnQgew0KICBoZWlnaHQ6IGF1dG87DQp9DQouZWwtZm9ybS0tbGFiZWwtbGVmdCAuZWwtZm9ybS1pdGVtX19sYWJlbCB7DQogIHRleHQtYWxpZ246IHJpZ2h0Ow0KfQ0KLmVsLWRpYWxvZ19fZm9vdGVyIHsNCiAgdGV4dC1hbGlnbjogcmlnaHQ7DQp9DQo="},{"version":3,"sources":["permissions-add.vue"],"names":[],"mappings":";AAgQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"permissions-add.vue","sourceRoot":"src/module-manage/components","sourcesContent":["<template>\r\n  <div class=\"add-form\">\r\n    <el-dialog :title=\"text+pageTitle\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form\r\n        :rules=\"ruleInline\"\r\n        ref=\"dataForm\"\r\n        :model=\"formBase\"\r\n        label-position=\"left\"\r\n        label-width=\"120px\"\r\n        style=\"width: 400px; margin-left:120px;\"\r\n      >\r\n        <el-form-item :label=\"$t('table.username')\" prop=\"title\">\r\n          <el-input v-model=\"formBase.title\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('table.powerDistriB')\">\r\n          <el-tree\r\n            ref=\"treeMenu\"\r\n            :data=\"treeData\"\r\n            show-checkbox\r\n            node-key=\"id\"\r\n            :default-expanded-keys=\"[0]\"\r\n            :default-checked-keys=\"formBase.permissions\"\r\n            :props=\"defaultProps\"\r\n            @check=\"handleCheckChange\"\r\n          ></el-tree>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"handleClose\">{{$t('table.cancel')}}</el-button>\r\n        <el-button type=\"primary\" @click=\"handleAdd('formBase')\">{{$t('table.confirm')}}</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { detail, update, add } from '@/api/base/permissions'\r\nimport { list } from '@/api/base/menus.js'\r\nlet _this = []\r\nexport default {\r\n  name: 'usersAdd',\r\n  props: ['text', 'pageTitle', 'ruleInline'],\r\n  data () {\r\n    return {\r\n      dialogFormVisible: false,\r\n      PermissionGroupsmenu: [],\r\n      defaultProps: {\r\n        label: 'title'\r\n      },\r\n      permissions: [],\r\n      treeCheckedNodes: [],\r\n      formBase: {\r\n        id: 0,\r\n        create_date: '',\r\n        title: '',\r\n        permissions: []\r\n      },\r\n      curPermissions: []\r\n    }\r\n  },\r\n  computed: {\r\n    treeData () {\r\n      function createNode (item) {\r\n        // 复选框选择\r\n        let checked = false\r\n        let selected = false\r\n        if (_this !== null && _this.formBase.permissions.length > 0) {\r\n          const per = _this.formBase.permissions.find(function (value, index) {\r\n            return value === item.id\r\n          })\r\n          selected = !!per\r\n        }\r\n        // 标记勾选\r\n        if (selected) {\r\n          const isPoint = item.childs === undefined && item.points === undefined\r\n          const hasChilds = item.childs !== undefined && item.childs.length > 0\r\n          const hasPoints = item.points !== undefined && item.points.length > 0\r\n          if (isPoint) {\r\n            checked = true\r\n          } else if (hasPoints) {\r\n            checked = false\r\n          } else if (hasChilds) {\r\n            checked = false\r\n          } else {\r\n            checked = true\r\n          }\r\n        }\r\n        return {\r\n          id: item.id === undefined ? 0 : item.id,\r\n          title: item.title,\r\n          children: [],\r\n          selected: selected,\r\n          checked: checked\r\n        }\r\n      }\r\n      function parseNodes (nodes, parentNode) {\r\n        for (const it of nodes) {\r\n          const node = createNode(it)\r\n          // 标记选中\r\n          // console.log(node.checked)\r\n          if (node.checked) {\r\n            parentNode.selected = true\r\n          }\r\n          if (it.childs !== undefined && it.childs.length > 0) {\r\n            parseNodes(it.childs, node)\r\n          } else if (it.points !== undefined && it.points.length > 0) {\r\n            parseNodes(it.points, node)\r\n          }\r\n          parentNode.children.push(node)\r\n        }\r\n      }\r\n      const nodes = createNode({ title: '系统菜单和页面权限点', expand: true })\r\n      parseNodes(this.PermissionGroupsmenu, nodes)\r\n      return [nodes]\r\n    }\r\n  },\r\n  methods: {\r\n    // 弹层显示\r\n    dialogFormV () {\r\n      this.dialogFormVisible = true\r\n    },\r\n    // 弹层隐藏\r\n    dialogFormH () {\r\n      this.dialogFormVisible = false\r\n    },\r\n    // 退出\r\n    handleClose () {\r\n      this.$emit('handleCloseModal')\r\n    },\r\n    // 表单重置\r\n    handleResetForm () {\r\n      this.formBase = {\r\n        id: 0,\r\n        title: '',\r\n        permissions: []\r\n      }\r\n    },\r\n    // 编辑详情数据加载\r\n    hanldeEditForm (objeditId) {\r\n      this.formBase.id = objeditId\r\n      var data = {\r\n        id: objeditId\r\n      }\r\n      detail(data).then((ret, err) => {\r\n        if (err) {\r\n          return err\r\n        }\r\n        this.formBase.id = ret.data.id\r\n        this.formBase.title = ret.data.title\r\n        this.formBase.permissions = ret.data.permissions\r\n      })\r\n    },\r\n    setupData () {\r\n      list().then(data => {\r\n        this.PermissionGroupsmenu = data.data\r\n      })\r\n    },\r\n\r\n    // 节点复选框被选中\r\n    handleCheckChange (data, checked, indeterminate) {\r\n      this.treeCheckedNodes = checked.checkedNodes\r\n    },\r\n    // 表单提交\r\n    handleAdd (object) {\r\n      // 读取完整节点\r\n      const curPermissions = new Set()\r\n      // function parse(nodes, selectedId) {\r\n      //   for (const it of nodes) {\r\n      //     let isFind = false\r\n      //     if (it.childs !== undefined) {\r\n      //       isFind = parse(it.childs, selectedId)\r\n      //     }\r\n      //     if (it.points !== undefined) {\r\n      //       isFind = parse(it.points, selectedId)\r\n      //     }\r\n      //     if (it.id === selectedId) {\r\n      //       isFind = true\r\n      //     }\r\n      //     if (isFind) {\r\n      //       curPermissions.add(it.id)\r\n      //       return true\r\n      //     }\r\n      //   }\r\n      //   return false\r\n      // }\r\n      // 已选中的控件节点\r\n      if (this.treeCheckedNodes.length === 0) {\r\n        this.treeCheckedNodes = this.$refs.treeMenu.getCheckedNodes()\r\n        if (this.treeCheckedNodes.length === 0) {\r\n          return\r\n        }\r\n      }\r\n      // 读取\r\n      for (const it of this.treeCheckedNodes) {\r\n        // parse(this.PermissionGroupsmenu, it.id)\r\n        curPermissions.add(it.id)\r\n      }\r\n      this.curPermissions = Array.from(curPermissions)\r\n      // 保存\r\n      if (this.curPermissions.length === 0) {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '请选择需要的权限及页面权限点',\r\n          type: 'error'\r\n        })\r\n      } else {\r\n        this.dataFormSub(this.curPermissions)\r\n      }\r\n    },\r\n    nodeDate (nodesPath, curPermissions, findId) {\r\n      nodesPath.map(function (item, index) {\r\n        if (curPermissions.indexOf(item.id) === -1) {\r\n          curPermissions.push(findId)\r\n        }\r\n      })\r\n    },\r\n    dataFormSub (curPermis) {\r\n      this.$refs.dataForm.validate(valid => {\r\n        if (valid) {\r\n          this.$emit('handleCloseModal')\r\n          if (_this.formBase.id) {\r\n            const technologyTypes = []\r\n            var data = {\r\n              id: this.formBase.id,\r\n              title: this.formBase.title,\r\n              permissions: curPermis\r\n            }\r\n            update(data).then(() => {\r\n              this.$emit('newDataes', this.formBase)\r\n            })\r\n          } else {\r\n            add({\r\n              title: this.formBase.title,\r\n              permissions: curPermis\r\n            }).then(() => {\r\n              this.$emit('newDataes', this.formBase)\r\n            })\r\n          }\r\n        } else {\r\n          this.$Message.error('*号为必填项!')\r\n        }\r\n      })\r\n    }\r\n  },\r\n  // 挂载结束\r\n\r\n  mounted: function () {},\r\n  // 创建完毕状态\r\n  created () {\r\n    _this = this\r\n    this.setupData()\r\n  },\r\n  // 组件更新\r\n  updated: function () {}\r\n}\r\n</script>\r\n<style>\r\n.el-tree {\r\n  margin-top: 8px;\r\n}\r\n.el-tree-node__content {\r\n  height: auto;\r\n}\r\n.el-form--label-left .el-form-item__label {\r\n  text-align: right;\r\n}\r\n.el-dialog__footer {\r\n  text-align: right;\r\n}\r\n</style>\r\n"]}]}